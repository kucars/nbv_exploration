<?xml version="1.0" ?>
<launch>
    <!-- World types are mutually exclusive. Only set ONE of them to "1" -->
    <arg name="world_type_debug_box" default="0"/>
    <arg name="world_type_full_size" default="0"/>
    <arg name="world_type_half_size" default="1"/>

    <!-- Vehicle settings -->
    <arg name="use_floating_sensor" default="true"/>
    <arg name="floating_sensor_model" value="$(find nbv_exploration)/urdf/floating_sensor.gazebo"/>

    <arg name="rtab_ns" default="rtabmap"/>
    <env name="GAZEBO_MODEL_PATH" value="$(find rotors_gazebo)/models"/>

    <!-- Starting position -->
    <!-- Debug box UAV start location -->
    <arg name="vehicle_starting_x" value="0"      if="$(arg world_type_debug_box)"/>
    <arg name="vehicle_starting_y" value="-20"    if="$(arg world_type_debug_box)"/>
    <arg name="vehicle_starting_z" value="0.5"    if="$(arg world_type_debug_box)"/>
    <arg name="vehicle_starting_Y" value="1.5707" if="$(arg world_type_debug_box)"/>

    <!-- Full sized scenario spawn point -->
    <arg name="vehicle_starting_x" value="0"      if="$(arg world_type_full_size)"/>
    <arg name="vehicle_starting_y" value="-38"    if="$(arg world_type_full_size)"/>
    <arg name="vehicle_starting_z" value="0.5"    if="$(arg world_type_full_size)"/>
    <arg name="vehicle_starting_Y" value="1.5707" if="$(arg world_type_full_size)"/>

    <!-- Half sized scenario spawn point -->
	<arg name="vehicle_starting_x" value="4"    if="$(arg world_type_half_size)"/>
	<arg name="vehicle_starting_y" value="-5"   if="$(arg world_type_half_size)"/>
        <arg name="vehicle_starting_z" value="3"    if="$(arg world_type_half_size)"/>
	<arg name="vehicle_starting_Y" value="3.14" if="$(arg world_type_half_size)"/>


    <!-- Misc settings -->
    <arg name="enable_rtab"  default="false"/>
    <arg name="start_gazebo" default="true"/>
    
    <arg name="scan_topic" default="/nbv_exploration/scan"/>
    <arg name="depth_topic" default="/nbv_exploration/depth"/>
    <arg name="depth2_topic" default="/nbv_exploration/depth2"/>
    
    <!-- Start Gazebo and set up the world -->
    <include if="$(arg start_gazebo)" file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="false" />
      <arg name="headless" value="false"/>
      <arg name="gui" value="true"/>

      <!-- debug box -->
      <arg name="world_name"
        if="$(arg world_type_debug_box)"
        value="$(find nbv_exploration)/worlds/box.world"
      />

      <!-- full size -->
      <arg name="world_name"
        if="$(arg world_type_full_size)"
        value="$(find nbv_exploration)/worlds/etihad_aircraft_world.world"
      />

      <!-- half size -->
      <arg name="world_name"
        if="$(arg world_type_half_size)"
        value="$(find nbv_exploration)/worlds/etihad_aircraft_world_half.world"
      />
    </include>

    <!-- Spawn vehicle -->
    <include if="$(arg use_floating_sensor)" file="$(find nbv_exploration)/launch/spawn_vehicle_floating_sensor.launch">
      <arg name="vehicle_starting_x" value="$(arg vehicle_starting_x)"/>
      <arg name="vehicle_starting_y" value="$(arg vehicle_starting_y)"/>
      <arg name="vehicle_starting_z" value="$(arg vehicle_starting_z)"/>
      <arg name="vehicle_starting_Y" value="$(arg vehicle_starting_Y)"/>
    </include>

    <include unless="$(arg use_floating_sensor)" file="$(find nbv_exploration)/launch/spawn_vehicle_uav.launch">
      <arg name="vehicle_starting_x" value="$(arg vehicle_starting_x)"/>
      <arg name="vehicle_starting_y" value="$(arg vehicle_starting_y)"/>
      <arg name="vehicle_starting_z" value="$(arg vehicle_starting_z)"/>
      <arg name="vehicle_starting_Y" value="$(arg vehicle_starting_Y)"/>
    </include>
    
    <!-- Start RVIZ -->
    <node pkg="rviz" name="rviz" type="rviz" args="-d $(find nbv_exploration)/config/nbv_rtabmap.rviz" required="false" />
     
    <!-- Set up RTAB -->
    <group ns="$(arg rtab_ns)" if="$(arg enable_rtab)">
      <node pkg="rtabmap_ros" name="rtabmap" type="rtabmap" output="screen" args="--delete_db_on_start">
	<param name="frame_id" type="string" value="/iris/xtion_sensor/ground_truth/iris/xtion_sensor/ground_truth/odometry_sensor_link"/>
	<param name="map_frame_id" type="string" value="map"/>
	<param name="subscribe_depth"     type="bool" value="true"/>
	<param name="subscribe_odom_info" type="bool" value="true"/>
	<param name="subscribe_laserScan" type="bool" value="true"/>
	<param name="wait_for_transform" type="bool" value="true"/>

	<remap from="odom"            to="/iris/ground_truth/odometry"/>
	<remap from="depth/image"     to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
	<remap from="rgb/image"       to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
	<remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
	<remap from="scan"            to="$(arg scan_topic)"/>

        <param name="queue_size" type="int" value="10"/>

	<!-- RTAB-Map's parameters: do "rosrun rtabmap_ros rtabmap (double-dash)params" to see the list of available parameters. -->
        <param name="RGBD/NeighborLinkRefining" type="string" value="false"/>  <!-- Do odometry correction with consecutive laser scans -->
	<param name="RGBD/ProximityBySpace"     type="string" value="true"/>  <!-- Local loop closure detection (using estimated position) with locations in WM -->
	<param name="RGBD/ProximityByTime"      type="string" value="false"/> <!-- Local loop closure detection with locations in STM -->
	<param name="RGBD/OptimizeFromGraphEnd" type="string" value="true"/>
	<param name="Reg/Strategy"              type="string" value="1"/>     <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->
	<param name="Vis/InlierDistance"        type="string" value="0.01"/>   <!-- 3D visual words correspondence distance -->
	<param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/> <!-- Optimize graph from initial node so /map -> /odom transform will be generated -->
	<param name="Optimizer/Slam2D"          type="string" value="false"/>
	<param name="Reg/Force3DoF"             type="string" value="false"/>
	<param name="Rtabmap/DetectionRate"     type="string" value="10"/>    <!-- Frequency of updates -->
	
	<param name="Icp/MaxCorrespondenceDistance" type="string" value="0.05"/> <!-- Max distance for point correspondences. (Default: 0.05) -->
	<param name="Icp/MaxRotation"               type="string" value="0.78"/> <!-- Maximum ICP rotation correction accepted (Default 0.78 rad) -->
	<param name="Icp/MaxTranslation"            type="string" value="0.20"/> <!-- Maximum ICP translation correction accepted (Default 0.2 m) -->
      </node>
    
      <!-- Visualisation RTAB-Map -->
      <!--
      <node pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz"  output="screen">
	  <param name="subscribe_depth"     type="bool"   value="true"/>
	  <param name="subscribe_laserScan" type="bool"   value="true"/>
	  <param name="subscribe_odom_info" type="bool"   value="true"/>
	  <param name="frame_id"            type="string" value="world"/>

	  <remap from="odom" to="/iris/xtion_sensor/ground_truth/odometry"/>
	  <remap from="depth/image" to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
	  <remap from="rgb/image" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
	  <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
      </node>
      -->
    </group>
    
    
    <!-- Run nodes -->    
    <!-- correct the laser scan points near the max and min range -->
    <node if="$(arg use_floating_sensor)" pkg="nbv_exploration" name="correct_laser_scan_and_depth" type="correct_laser_scan_and_depth" ns="nbv_exploration_ns" args="" required="true" output="screen">
      <rosparam file="$(find nbv_exploration)/config/sensor_settings.yaml" command="load" />
	  <remap from="scan_in"    to="/floating_sensor/scan"/>
	  <remap from="scan_out"   to="$(arg scan_topic)"/>
	  <remap from="depth_in"   to="/floating_sensor/camera/depth/points"/>
	  <remap from="depth_out"  to="$(arg depth_topic)"/>
	  <remap from="depth2_in"  to="/floating_sensor/camera2/depth/points"/>
	  <remap from="depth2_out" to="$(arg depth2_topic)"/>
    </node>

    <node unless="$(arg use_floating_sensor)" pkg="nbv_exploration" name="correct_laser_scan_and_depth" type="correct_laser_scan_and_depth" ns="nbv_exploration_ns" args="" required="true" output="screen">
      <rosparam file="$(find nbv_exploration)/config/sensor_settings.yaml" command="load" />     
	  <remap from="scan_in"    to="/iris/scan"/>
	  <remap from="scan_out"   to="$(arg scan_topic)"/>
	  <remap from="depth_in"   to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/points"/>
	  <remap from="depth_out"  to="$(arg depth_topic)"/>
	  <remap from="depth2_in"  to="/iris/xtion_sensor/iris/xtion_sensor_camera2/depth/points"/>
	  <remap from="depth2_out" to="$(arg depth2_topic)"/>
    </node>
</launch>
